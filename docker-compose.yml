version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
    container_name: nginx
    env_file:
     - ./.env
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mysql:8.0.31-debian
    container_name: mysql
    env_file:
     - ./.env
    restart: unless-stopped
    tty: true
    ports:
      - ${DB_PORT}:3306
    volumes:
      - ./database:/var/lib/mysql
    command: [mysqld, --default-authentication-plugin=mysql_native_password, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb_monitor_enable=all, --max-connections=1001]
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      # SERVICE_TAGS: dev
      # SERVICE_NAME: mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    env_file:
     - ./.env
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${DB_PORT}
      PMA_USER: root 
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
    restart: always
    ports:
      - ${PMA_PORT}:80
    networks:
      - laravel
      
  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    command: chmod -R 777 storage bootstrap/cache
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel

  queue:
    build:
      context: ./dockerfiles
      dockerfile: worker.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: queue
    entrypoint: ['sh', '/usr/bin/scripts/queue.sh']
    volumes:
      - ./src:/var/www/html
    depends_on:
      - site
    networks:
      - laravel

  crontabs:
    build:
      context: ./dockerfiles
      dockerfile: worker.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: crontabs
    entrypoint: ['sh', '/usr/bin/scripts/crontabs.sh']
    volumes:
      - ./src:/var/www/html
    depends_on:
      - site
    networks:
      - laravel
